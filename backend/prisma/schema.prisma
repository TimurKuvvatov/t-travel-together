generator client {
  provider = "prisma-client-js"
  jsTarget = "es2020"
  module = "es"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  passwordHash String?
  isAdmin      Boolean     @default(false)
  isBlocked    Boolean     @default(false)
  blockAfter   DateTime?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  isCorporate  Boolean     @default(false)
  interviews   Interview[]
}

model Interview {
  id         String   @id @default(uuid())
  userId     String
  direction  String
  transcript Json
  summary    String
  duration   Int
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Direction {
  id     String  @id @default(uuid())
  name   String  @unique
  iconPath String
  themes Theme[]
}

model Theme {
  id          String     @id @default(uuid())
  name        String 
  directionId String
  questions   Question[]
  direction   Direction  @relation(fields: [directionId], references: [id], onDelete: Cascade)
  @@unique([name, directionId])
}

model Question {
  id        String  @id @default(uuid())
  text      String
  isDefault Boolean @default(false)
  themeId   String
  theme     Theme   @relation(fields: [themeId], references: [id], onDelete: Cascade)
}

model Prompt {
  id        String     @id @default(uuid())
  type      PromptType
  text      String
  isDefault Boolean    @default(false)
  histories PromptHistory[]
}

model PromptHistory {
  id String @id @default(uuid())
  promptId String
  oldText String
  newText String
  changedAt DateTime @default(now())
  changedBy String
  prompt Prompt @relation(fields: [promptId], references: [id], onDelete: Cascade)
}

enum PromptType {
  initialPrompt
  summaryPrompt
}

model Task {
  id String @id @default(uuid())
  title String
  description String
  difficulty TaskLevel
  tags Tag[] @relation("TaskTags")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

enum TaskLevel {
  easy
  medium
  hard
}

model Tag {
  id     String  @id @default(uuid())
  name   String  @unique
  tasks  Task[]  @relation("TaskTags")
}